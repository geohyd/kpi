@import "../colors";

.kobo-select__wrapper {
  &.kobo-select__wrapper--error {
    > label,
    .kobo-select-label,
    .kobo-select-error,
    .kobo-select .kobo-select__placeholder {
      color: $kobo-red;
    }

    .kobo-select .kobo-select__control {
      border-bottom-color: $kobo-red;
    }
  }
}

.kobo-select-label {
  display: block;
  color: inherit;
  font-size: 12px;
  line-height: 16px;
  font-weight: 400;
  opacity: 0.38;

  & + .kobo-select {
    margin-top: 10px;
  }
}

.kobo-select-error {
  font-size: 12px;
}

.kobo-select {
  &.kobo-select--is-disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  .kobo-select__control {
    box-shadow: none;
    border: none;
    border-radius: 3px;
    color: $kobo-gray-40;
    background-color: $kobo-white;
    min-height: 24px;
    font-size: 12px;
    padding: 0 8px;
    box-sizing: border-box;
    cursor: pointer;

    &:hover {
      border-color: $kobo-gray-92;
    }

    &.kobo-select__control--is-focused {
      border-color: $kobo-blue;
    }
  }

  .kobo-select__input input {
    // HACK: most of the global styles are removed by react-select itself, but
    // some we need to remove ourself (until our global input[type="text"]
    // styles are removed)
    transition: none !important;
  }

  .kobo-select__placeholder {
    color: $kobo-gray-40;
  }

  .kobo-select__indicator-separator {
    display: none;
  }

  .kobo-select__menu {
    @include box-shadow;
    border-radius: 4px;
    // getting select menus to appear over checkboxes
    z-index: 2;
    margin-top: 0;
    margin-bottom: 0;
  }

  .kobo-select__menu-list {
    // NOTE: we previously restricted height of select dropdown by brute force
    // but it seems that our current version of react-select handles this very
    // well. I will leave this commented out for now here.
    // max-height: 36px * 3.5 + 8px; // display 3.5 items
    padding-top: 0;
    padding-bottom: 0;
  }

  .kobo-select__option {
    cursor: pointer;

    &.kobo-select__option--is-selected {
      background-color: $kobo-white;
      color: $kobo-blue;
      font-weight: 700;
    }

    // is-focused needs to go after is-selected
    &.kobo-select__option--is-focused {
      background-color: $kobo-gray-96;
    }
  }
}

// A custom react-select for validation status
.kobo-select.kobo-select--validation {
  .kobo-select__menu {
    left: -10px;
    width: calc(100% + 20px);
  }

  .kobo-select__menu-list {
    padding: 10px 0;
    text-align: left;
  }

  .kobo-select__value-container {
    padding: 0;
  }

  // used together with kobo-select__option-badge
  .kobo-select__option-wrapper {
    padding: 4px 10px;
    position: relative;

    &:hover {
      background-color: $kobo-gray-96;
    }
  }

  .kobo-select__indicator {
    margin-left: 5px;
  }

  .kobo-select__indicator,
  .kobo-select__option-badge .kobo-select__option {
    padding: 0;

    // used to make the clickable area take the whole space
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: transparent;
    }
  }

  // custom option badge, mostly for validation status select
  .kobo-select__option-badge {
    font-weight: 500;
    line-height: 1;
    font-size: 12px;
    height: 24px;
    padding: 4px 8px;
    border: 2px solid transparent;
    border-radius: 10px;
    display: inline-block;
    vertical-align: top;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    // this is some dummy input that causes the caret indicator to be weirdly
    // positioned when ellipsis overflow kicks in
    & + [class*="dummyInput-DummyInput"] {
      visibility: hidden;
      position: absolute;
    }

    // reset the styles of single value
    .kobo-select__single-value {
      display: inline;
      position: static;
      margin: 0;
      color: inherit;
      overflow: visible;
      text-overflow: initial;
      white-space: initial;
      transform: none;
      top: auto;
    }

    .kobo-select__option.kobo-select__option--is-focused,
    .kobo-select__option.kobo-select__option--is-selected {
      background-color: transparent;
      color: inherit;
      font-weight: inherit;
    }

    // when selected add colored border for those options
    &.kobo-select__option-badge--validation_status_not_approved,
    &.kobo-select__option-badge--validation_status_approved,
    &.kobo-select__option-badge--validation_status_on_hold {
      &.kobo-select__option-badge--selected {
        border-color: currentColor;
      }
    }

    &.kobo-select__option-badge--validation_status_not_approved {
      background-color: $kobo-red-pale;
      color: $kobo-red-pale-dark;
    }

    &.kobo-select__option-badge--validation_status_approved {
      background-color: $kobo-teal-pale;
      color: $kobo-teal-pale-dark;
    }

    &.kobo-select__option-badge--validation_status_on_hold {
      background-color: $kobo-orange-pale;
      color: $kobo-orange-pale-dark;
    }
  }
}
