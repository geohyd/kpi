$data-table-border: 1px solid $kobo-gray-92;

.form-view--table {
  padding: 0px 15px;
  position: relative;

  .form-view__group--table-header {
    padding: 10px 0px 0px 0px;
    display: flex;
    justify-content: 'space-between';
    transition: 0.3s all;
    opacity: 1;

    &.form-view__group--table-loading {
      opacity: 0.25;
    }

    .form-view__item--table-buttons {
      text-align: right;

      button {
        overflow: visible;
      }
    }
  }
}

// react table overrides
.form-view--table .ReactTable {
  border: none;
  background: transparent;
  height: calc(100% - 50px);

  .rt-table {
    border: $data-table-border;
    background-color: $kobo-white;
    color: $kobo-gray-24;
    font-size: 14px;
  }

  // minimum body height so at least two rows are visible
  .rt-tbody {
    min-height: 72px;
  }

  .rt-tbody, .rt-thead {
    overflow-x: hidden;
  }

  .rt-thead {
    background: $kobo-gray-96;

    .column-header-title {
      font-weight: 600;
    }

    // the first header row
    &.-header {
      box-shadow: none;
      overflow-x: visible;

      .table-bulk-checkbox-header {
        overflow: visible;
      }
    }

    // the second header row
    &.-filters {
      // we want both header rows to look like one merged
      border-bottom: $data-table-border;
      border-bottom-width: 2px;

      .rt-th,
      .rt-td {
        border-right: $data-table-border;
      }

      input {
        padding: 2px 4px;
      }

      select {
        margin-top: 2px;
        margin-right: 2px;
      }
    }

    .rt-tr {
      align-items: center;
    }

    .rt-th:hover,
    .rt-td:hover {
      background: transparent;
    }

    .rt-th.-sort-desc,
    .rt-td.-sort-desc,
    .rt-th.-sort-asc,
    .rt-td.-sort-asc {
      box-shadow: inset 0 3px 0 0 $kobo-teal;
    }

    .rt-resizable-header-content {
      overflow: visible;
      text-overflow: inherit;
      line-height: 1.2;
      padding: 5px 0;

      .column-header-title,
      .column-header-hxl-tags {
        display: block;
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .column-header-hxl-tags {
        color: $kobo-darkgray;
      }
    }
  }

  .rt-tr {
    align-items: stretch;
    justify-content: stretch;
  }

  .rt-th, .rt-td {
    padding: 5px;
    border-right: $data-table-border;
    line-height: 22px;
    height: 42px;
  }

  .rt-td.rt-status {
    line-height: inherit;
    overflow: visible;

    .kobo-select__control {
      background: transparent;
      height: 30px;
      min-height: 30px;
      border: none;
      border-radius: 0px;
      box-shadow: none;
      cursor: pointer;

      &:hover {
        box-shadow: none;
      }
    }
  }

  .rt-link {
    overflow: visible;

    .table-link {
      cursor: pointer;
      display: inline-block;
      min-height: 28px;

      &:hover {
        color: $kobo-blue;
      }

      i {
        font-size: 24px;
        margin: 0 3px;
        vertical-align: middle;
      }
    }
  }

  .-pagination {
    box-shadow: none;
    border-top: none;

    .-center {
      flex: 2;
    }

    .-btn {
      @extend .mdl-button, .mdl-button--colored;

      &:hover {
        background: transparent;
      }
    }
  }

  .pagination-bottom {
    margin-top: 5px;
    margin-bottom: 5px;
  }

  .-loading {
    background: $kobo-whitegray;

    .-loading-inner {
      display: block;
      text-align: center;
      font-size: 18px;
      opacity: 0.8;
      color: $kobo-darkgray;

      i {
        margin-right: 12px;
        vertical-align: middle;
        font-size: 24px;
      }
    }
  }

  &.-highlight .rt-tbody .rt-tr:not(.-padRow):hover {
    background: $kobo-gray-98;
  }

  &.has-frozen-column {
    .frozen {
      order: -1;
      position: relative;
      left: 0;
      background: $kobo-whitegray;
      height: 36px;
      transition: left 0.2s;
      margin-right: 6px;

      &:not(.rt-status) {
        z-index: 2;

        &:hover {
          z-index: 3;
        }
      }
    }

    .rt-th.frozen {
      height: 34px;
    }
  }
}

.tableColumn-modal {
  .form-view__cell--label {
    padding-bottom: 10px;
  }

  .form-modal__item {
    margin-bottom: 20px;

    &--advanced-table-options {
      border: 1px solid $kobo-gray-92;
      padding: 20px;
      background: $kobo-gray-96;

      .form-view__cell--note {
        padding-bottom: 20px;
      }

      .form-modal__item:last-child {
        margin-bottom: 0px;
      }
    }
  }

  .form-modal__item--translation-radios {
    .radio__row--title {
      font-size: inherit;
      color: inherit;
      font-weight: 500;
    }
  }

  ul {
    max-height: 160px;
    overflow: auto;
    border: 1px solid $kobo-gray-92;
    padding: 10px;
    background: $kobo-white;

    li {
      margin-bottom: 5px;
      max-width: 100%;
    }
  }
}

@media screen and (max-width: 767px) {
  .form-view--table {
    padding: 0px 20px;
  }

  .form-view--table .ReactTable .pagination-bottom {
    margin-bottom: 10px;
  }
}
